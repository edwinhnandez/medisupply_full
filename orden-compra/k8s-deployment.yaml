apiVersion: apps/v1
kind: Deployment
metadata:
  name: orden-compra
  namespace: event-mesh-system
  labels:
    app: orden-compra
    service: orden-compra
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orden-compra
  template:
    metadata:
      labels:
        app: orden-compra
        service: orden-compra
    spec:
      containers:
      - name: orden-compra
        image: orden-compra:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: SERVICE_PORT
          value: "8000"
        - name: RABBITMQ_URL
          value: "amqp://guest:guest@rabbitmq-service:5672/"
        - name: RABBITMQ_QUEUE_NAME
          value: "stock-bajo-queue"
        - name: RABBITMQ_EXCHANGE_NAME
          value: "stock-bajo-exchange"
        - name: RABBITMQ_ROUTING_KEY
          value: "stock.bajo"
        # DynamoDB Configuration
        # For LOCAL DynamoDB (current setup):
        - name: DYNAMODB_ENDPOINT
          value: "http://dynamodb-local:8000"
        - name: DYNAMODB_REGION
          value: "us-west-2"
        - name: AWS_ACCESS_KEY_ID
          value: "AKIA..."
        - name: AWS_SECRET_ACCESS_KEY
          value: "..."
        # For EXTERNAL DynamoDB (AWS):
        # Remove DYNAMODB_ENDPOINT line above
        # Change DYNAMODB_REGION to your AWS region
        # Change AWS_ACCESS_KEY_ID to your AWS access key
        # Change AWS_SECRET_ACCESS_KEY to your AWS secret key
        - name: JAEGER_ENDPOINT
          value: "http://jaeger-collector:14268/api/traces"
        - name: ENVIRONMENT
          value: "production"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: app-logs
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: orden-compra-service
  namespace: event-mesh-system
  labels:
    app: orden-compra
    service: orden-compra
spec:
  ports:
  - port: 8000
    targetPort: 8000
    name: http
  selector:
    app: orden-compra
