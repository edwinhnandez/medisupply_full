apiVersion: v1
kind: Namespace
metadata:
  name: event-mesh-system

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: event-mesh-system
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:7.4.0
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper:2181"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka-broker:9092"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_DELETE_TOPIC_ENABLE
          value: "true"
        - name: KAFKA_LOG_RETENTION_HOURS
          value: "168"
        - name: KAFKA_LOG_SEGMENT_BYTES
          value: "1073741824"
        - name: KAFKA_NUM_PARTITIONS
          value: "3"
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"
        volumeMounts:
        - name: kafka-storage
          mountPath: /var/lib/kafka/data
  volumeClaimTemplates:
  - metadata:
      name: kafka-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker
  namespace: event-mesh-system
spec:
  ports:
  - port: 9092
    targetPort: 9092
  selector:
    app: kafka

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: event-mesh-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:7.4.0
        ports:
        - containerPort: 2181
        env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_TICK_TIME
          value: "2000"
        resources:
          requests:
            memory: "64Mi"
            cpu: "25m"
          limits:
            memory: "128Mi"
            cpu: "50m"

---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: event-mesh-system
spec:
  ports:
  - port: 2181
    targetPort: 2181
  selector:
    app: zookeeper

---
apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-topic-setup
  namespace: event-mesh-system
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: kafka-topic-setup
        image: confluentinc/cp-kafka:7.4.0
        command:
        - sh
        - -c
        - |
          kafka-topics --create --topic FallaCadenaFrio --bootstrap-server kafka-broker:9092 --partitions 3 --replication-factor 1
          kafka-topics --create --topic StockBajo --bootstrap-server kafka-broker:9092 --partitions 3 --replication-factor 1
          kafka-topics --list --bootstrap-server kafka-broker:9092
