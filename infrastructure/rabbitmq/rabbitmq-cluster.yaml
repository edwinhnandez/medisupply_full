apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: event-mesh-system
spec:
  serviceName: rabbitmq
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.12-alpine
        ports:
        - containerPort: 5672
          name: amqp
        - containerPort: 15672
          name: management
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: "guest"
        - name: RABBITMQ_DEFAULT_PASS
          value: "guest"
        - name: RABBITMQ_DEFAULT_VHOST
          value: "/"
        - name: RABBITMQ_ERLANG_COOKIE
          value: "SWQOKODSQALRPCLNMEQG"
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"
        volumeMounts:
        - name: rabbitmq-storage
          mountPath: /var/lib/rabbitmq
        livenessProbe:
          tcpSocket:
            port: 5672
          initialDelaySeconds: 60
          periodSeconds: 60
        readinessProbe:
          tcpSocket:
            port: 5672
          initialDelaySeconds: 20
          periodSeconds: 60
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
  namespace: event-mesh-system
spec:
  ports:
  - port: 5672
    targetPort: 5672
    name: amqp
  - port: 15672
    targetPort: 15672
    name: management
  selector:
    app: rabbitmq

---
apiVersion: batch/v1
kind: Job
metadata:
  name: rabbitmq-setup
  namespace: event-mesh-system
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: rabbitmq-setup
        image: rabbitmq:3.12-management
        command:
        - sh
        - -c
        - |
          sleep 30
          rabbitmqctl await_startup
          rabbitmqctl add_vhost /event-mesh
          rabbitmqctl set_permissions -p /event-mesh guest ".*" ".*" ".*"
          rabbitmqctl declare_exchange -p /event-mesh name=stock-bajo-exchange type=topic
          rabbitmqctl declare_exchange -p /event-mesh name=recepcion-proveedor-exchange type=topic
          rabbitmqctl declare_exchange -p /event-mesh name=inventario-recibido-exchange type=topic
          rabbitmqctl declare_queue -p /event-mesh name=stock-bajo-queue
          rabbitmqctl declare_queue -p /event-mesh name=recepcion-proveedor-queue
          rabbitmqctl declare_queue -p /event-mesh name=inventario-recibido-queue
          rabbitmqctl bind_queue -p /event-mesh source=stock-bajo-exchange destination=stock-bajo-queue routing_key=stock.bajo
          rabbitmqctl bind_queue -p /event-mesh source=recepcion-proveedor-exchange destination=recepcion-proveedor-queue routing_key=recepcion.proveedor
          rabbitmqctl bind_queue -p /event-mesh source=inventario-recibido-exchange destination=inventario-recibido-queue routing_key=inventario.recibido
