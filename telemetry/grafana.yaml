apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: event-mesh-system
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus-service:9090
      isDefault: true
      editable: true

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard
  namespace: event-mesh-system
data:
  dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Event Mesh Architecture Dashboard",
        "tags": ["event-mesh", "microservices"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Events Processed",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(rate(movimiento_inventario_events_processed_total[5m]))",
                "legendFormat": "Movimiento Inventario"
              },
              {
                "expr": "sum(rate(orden_compra_events_processed_total[5m]))",
                "legendFormat": "Orden Compra"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Processing Time",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(movimiento_inventario_processing_duration_seconds_bucket[5m]))",
                "legendFormat": "Movimiento Inventario P95"
              },
              {
                "expr": "histogram_quantile(0.95, rate(orden_compra_processing_duration_seconds_bucket[5m]))",
                "legendFormat": "Orden Compra P95"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 0}
          },
          {
            "id": 3,
            "title": "Error Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "sum(rate(movimiento_inventario_errors_total[5m]))",
                "legendFormat": "Movimiento Inventario Errors"
              },
              {
                "expr": "sum(rate(orden_compra_errors_total[5m]))",
                "legendFormat": "Orden Compra Errors"
              }
            ],
            "gridPos": {"h": 8, "w": 24, "x": 0, "y": 8}
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: event-mesh-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:10.1.0
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        - name: GF_INSTALL_PLUGINS
          value: "grafana-piechart-panel"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboard
          mountPath: /etc/grafana/provisioning/dashboards
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboard
        configMap:
          name: grafana-dashboard

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: event-mesh-system
spec:
  ports:
  - port: 3000
    targetPort: 3000
    name: http
  selector:
    app: grafana
